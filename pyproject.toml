[project]
name = "datainfrapilot-be"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Ilya Tsakunov", email = "ilyatsakunov@seznam.cz" }
]
requires-python = ">=3.12.2"
dependencies = [
    "asyncio==3.4.3",
    "asyncssh==2.20.0",
    "bcrypt==4.3.0",
    "fastapi==0.115.11",
    "fastapi-utils==0.8.0",
    "hcloud==2.3.0",
    "httpx==0.28.1",
    "jinja2==3.1.6",
    "kubernetes==32.0.1",
    "pandas==2.2.3",
    "pre-commit==4.2.0",
    "pyhelm3==0.4.0",
    "python-dotenv==1.0.1",
    "setuptools==76.0.0",
    "sqlalchemy==2.0.38",
    "sqlmodel==0.0.24",
    "tenacity==9.1.2",
    "typing-inspect==0.9.0",
    "uvicorn==0.34.0",
]

[dependency-groups]
dev = [
    "ruff==0.11.13",
]

[project.optional-dependencies]
demo = [
    "azure-identity==1.23.0",
    "azure-storage-blob==12.25.1",
    "fastparquet==2024.11.0",
    "httpx==0.28.1",
    "openpyxl==3.1.5",
    "psycopg2==2.9.10",
    "pyarrow==20.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py312"
line-length = 120
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests"
]

[tool.ruff.lint]
select = [
    "A", # flake8-builtins
    "ANN", # type annotations
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    #"D",  # pydocstyle - TODO: enable
    "E",  # Error
    "F",  # pyflakes
    "FAST", # FastAPI
    "I",  # isort
    "N",  # pep8-naming
    "PGH",  # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific
    "S",  # bandit
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops
    "UP",  # pyupgrade
    "W",  # Warning
    "YTT", # flake8-2020
]

ignore = [
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "E501", # Line too long - TODO: remove
    "S501", # Probable use of `httpx` call with `verify=False` disabling SSL certificate checks
    "TRY003", # Avoid specifying long messages outside the exception class
    "TRY300", # Questionable rule
    "TRY301", # Abstract `raise` to an inner function
    "TRY401", # Redundant exception object included in `logging.exception` call TODO: remove
]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends"]

[tool.ruff.format]
quote-style = "single"
line-ending = "auto"
